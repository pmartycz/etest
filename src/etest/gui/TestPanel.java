/*
 * Copyright (C) 2017 Piotr Martycz
 */
package etest.gui;

import etest.Application;
import etest.client.Client;
import etest.client.ProtocolException;
import etest.entities.Test;
import etest.entities.TestHeader;
import etest.entities.TestStatus;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import javax.swing.GroupLayout;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 * A panel for displaying test.
 * 
 * @author pmart
 */
public class TestPanel extends javax.swing.JPanel {

    private final Client client;
    private final Test test;
    private final GroupLayout layout;
    private int questionIndex;
    
    /**
     * Creates new form TestPanel
     */
    public TestPanel(Client client, Test test) {
        this.client = client;
        this.test = test;
        initComponents();
        this.layout = (GroupLayout) this.getLayout();
        
        displayQuestion(0);
        
        if (test.isStatus(TestStatus.PENDING)) {
            submitButton.setEnabled(true);
            createTimer();
        } else {
            timeoutValueLabel.setText("N/A");
        }
        
        if (test.isStatus(TestStatus.FINISHED) && test.isResultsAvailable()) {
            userScoreValueLabel.setText(String.format("%d/%d", 
                    test.getUserScore(), test.getNumberOfQuestions()));
        } else {
            userScoreValueLabel.setText("N/A");
        }
    }
    
    private void createTimer() {
        new Timer(1000, new ActionListener() {
            private long ticks = test.getNumberOfSecondsRemaining();
            
            @Override
            public void actionPerformed(ActionEvent e) {
                if (--ticks < 0)
                    ((Timer) e.getSource()).stop();
                else
                    timeoutValueLabel.setText(String.format("%d:%02d", ticks / 60, ticks % 60));
            }
        }).start();
    }
    
    private void displayQuestion(int i) {
        if (i < 0 || i >= test.getNumberOfQuestions())
            return;
        questionIndex = i;
        
        questionNumberTextField.setValue(i + 1);
        
        questionLabel.setText(test.getQuestionText(i));
        
        AnswersPanel newAnswersPanel = new AnswersPanel(test, questionIndex);
        layout.replace(answersPanel, newAnswersPanel);
        answersPanel = newAnswersPanel;
        
    }
    
    /**
     * Switches application back to test list panel.
     */
    void switchToTestListPanel() {
        try {
            TestHeader[] headers = client.getTests();
            Application.switchPanel(new TestListPanel(client, headers));
        } catch (IOException | ProtocolException ex) {
            if (ex instanceof IOException)
                JOptionPane.showMessageDialog(this, "Error conncecting to server: " + ex.getMessage(), "Network Error", JOptionPane.ERROR_MESSAGE);
            if (ex instanceof ProtocolException)
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Protocol Error", JOptionPane.ERROR_MESSAGE);
            Application.switchPanel(new LoginPanel());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        answersPanel = new javax.swing.JPanel();
        previousButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        abortButton = new javax.swing.JButton();
        questionLabel = new javax.swing.JLabel();
        questionNumberTextField = new javax.swing.JFormattedTextField();
        numberOfQuestionsLabel = new javax.swing.JLabel();
        testInfoPanel = new javax.swing.JPanel();
        testNameLabel = new javax.swing.JLabel();
        timeoutLabel = new javax.swing.JLabel();
        testNameValueLabel = new javax.swing.JLabel();
        timeoutValueLabel = new javax.swing.JLabel();
        userScoreLabel = new javax.swing.JLabel();
        userScoreValueLabel = new javax.swing.JLabel();

        answersPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        answersPanel.setLayout(new javax.swing.BoxLayout(answersPanel, javax.swing.BoxLayout.PAGE_AXIS));

        previousButton.setText("Previous");
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        submitButton.setText("Submit");
        submitButton.setEnabled(false);
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        abortButton.setText("Close");
        abortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abortButtonActionPerformed(evt);
            }
        });

        questionLabel.setText("Question Text");

        questionNumberTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        questionNumberTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        questionNumberTextField.setValue(1);
        questionNumberTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                questionNumberTextFieldPropertyChange(evt);
            }
        });

        numberOfQuestionsLabel.setText("/ " + test.getNumberOfQuestions());

        testInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Test"));

        testNameLabel.setText("Name:");

        timeoutLabel.setText("Time Remaining:");

        testNameValueLabel.setText(test.getName());

        timeoutValueLabel.setText("0:00");

        userScoreLabel.setText("User Score:");

        userScoreValueLabel.setText("0");

        javax.swing.GroupLayout testInfoPanelLayout = new javax.swing.GroupLayout(testInfoPanel);
        testInfoPanel.setLayout(testInfoPanelLayout);
        testInfoPanelLayout.setHorizontalGroup(
            testInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(testInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(userScoreLabel)
                    .addComponent(testNameLabel)
                    .addComponent(timeoutLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(testInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testNameValueLabel)
                    .addComponent(timeoutValueLabel)
                    .addComponent(userScoreValueLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        testInfoPanelLayout.setVerticalGroup(
            testInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(testInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(testNameValueLabel)
                    .addComponent(testNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(testInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeoutValueLabel)
                    .addComponent(timeoutLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(testInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userScoreLabel)
                    .addComponent(userScoreValueLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(testInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(previousButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(abortButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(answersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(questionNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numberOfQuestionsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(questionLabel)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {abortButton, nextButton, previousButton, submitButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questionNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfQuestionsLabel)
                    .addComponent(questionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(answersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(previousButton)
                    .addComponent(nextButton)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(abortButton)
                        .addComponent(submitButton))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        displayQuestion(questionIndex - 1);
    }//GEN-LAST:event_previousButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        displayQuestion(questionIndex + 1);
    }//GEN-LAST:event_nextButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        if (!test.userAnsweredAllQuestions()) {
            int n = JOptionPane.showConfirmDialog(
                this, 
                "You haven't answered all test questions. Are you sure you want to submit your answers?", 
                "Confirm Test Submit",
                JOptionPane.YES_NO_OPTION
            );
            if (n != JOptionPane.YES_OPTION)
                return;
        }
        
        try {
            client.putAnswers(test);
            JOptionPane.showMessageDialog(this, "Answers successfully submitted.", "Answers Submitted", JOptionPane.INFORMATION_MESSAGE);
            switchToTestListPanel();
        } catch (IOException | ProtocolException ex) {
            if (ex instanceof IOException)
                JOptionPane.showMessageDialog(this, "Error conncecting to server.", "Network Error", JOptionPane.ERROR_MESSAGE);
            if (ex instanceof ProtocolException)
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Protocol Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void questionNumberTextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_questionNumberTextFieldPropertyChange
        displayQuestion(((Number) questionNumberTextField.getValue()).intValue() - 1);
    }//GEN-LAST:event_questionNumberTextFieldPropertyChange

    private void abortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abortButtonActionPerformed
        switchToTestListPanel();
    }//GEN-LAST:event_abortButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abortButton;
    private javax.swing.JPanel answersPanel;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel numberOfQuestionsLabel;
    private javax.swing.JButton previousButton;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JFormattedTextField questionNumberTextField;
    private javax.swing.JButton submitButton;
    private javax.swing.JPanel testInfoPanel;
    private javax.swing.JLabel testNameLabel;
    private javax.swing.JLabel testNameValueLabel;
    private javax.swing.JLabel timeoutLabel;
    private javax.swing.JLabel timeoutValueLabel;
    private javax.swing.JLabel userScoreLabel;
    private javax.swing.JLabel userScoreValueLabel;
    // End of variables declaration//GEN-END:variables

}
